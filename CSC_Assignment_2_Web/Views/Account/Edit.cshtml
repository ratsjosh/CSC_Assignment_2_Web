@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style type="text/css">
    .under {
        position: absolute;
        left: 0px;
        top: 0px;
        z-index: 1;
    }

    .over {
        position: absolute;
        left: 0px;
        top: 0px;
        z-index: 1;
        opacity: 0.65;
        visibility: hidden;
    }


    .StripeElement {
        background-color: white;
        padding: 8px 12px;
        border-radius: 4px;
        border: 1px solid transparent;
        box-shadow: 0 1px 3px 0 #e6ebf1;
        -webkit-transition: box-shadow 150ms ease;
        transition: box-shadow 150ms ease;
    }

    .StripeElement--focus {
        box-shadow: 0 1px 3px 0 #cfd7df;
    }

    .StripeElement--invalid {
        border-color: #fa755a;
    }

    .StripeElement--webkit-autofill {
        background-color: #fefde5 !important;
    }
</style>

<div class="container">
    <h1>Edit Profile</h1>
    <hr>
    <div class="row">
        <!-- left column -->
        <div class="col-md-3">
            <div class="text-center">
                <img width="200" height="200" class="under avatar img-circle" id="ProfilePic" style="cursor: pointer;" alt="avatar" src="//placehold.it/200" onclick="$('#myInput').click();">
                <img id="loading" width="200" height="200" class="over avatar img-circle" style="cursor: pointer;" alt="avatar" src="~/images/loading.gif">
                <input id="myInput" class="form-control" style="visibility:hidden" type="file">
            </div>
        </div>
        <!-- edit form column -->
        <div class="col-md-9 personal-info">
            <div class="row">
                <div class="col-md-8">

                    <h3>Personal info</h3>
                    <form id="editform" method="post" class="form-horizontal" role="form">
                        <div class="form-group">
                            <label class="col-lg-3 control-label">Name:</label>
                            <div class="col-lg-8">
                                <input class="form-control" type="text" id="name">
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-lg-3 control-label">Email:</label>
                            <div class="col-lg-8">
                                <input class="form-control" type="text" id="email">
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-3 control-label">Reknown:</label>
                            <div class="col-md-8">
                                <input class="form-control" type="text" id="reknown">
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-3 control-label">Biography:</label>
                            <div class="col-md-8">
                                <textarea rows="5" class="form-control" id="bio" placeholder="Biography"></textarea>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-3 control-label"></label>
                            <div class="col-md-8">
                                <input class="btn btn-success" id="btnSaveChanges" type="button" value="Save Changes">
                                <span></span>
                                <input class="btn btn-default" type="reset" value="Cancel">
                            </div>
                        </div>
                    </form>
                </div>
                <h3>Subscription Status</h3>
                <label id="status" style="font-size:larger;"></label>
                <br />
                <button  class="btn btn-primary" id="upgrade">Upgrade</button>
                <div class="col-md-4">
                    <form method="post" class="form-horizontal" role="form">
                        <h3>Reset Password</h3>
                        <div class="form-group">
                            <label class="col-md-3 control-label">New password:</label>
                            <div class="col-md-8">
                                <input class="form-control" type="password">
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-3 control-label">Confirm password:</label>
                            <div class="col-md-8">
                                <input class="form-control" type="password">
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-md-3 control-label"></label>
                            <div class="col-md-8">
                                <input class="btn btn-primary" type="button" value="Change Password">
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    var userId = getParameterByName('id');
    $(document).ready(function () {
        var nameInput = $("#name");
        var emailInput = $("#email");
        var reknownInput = $("#reknown");
        var bioInput = $("#bio");
        var profilePic = $('#ProfilePic');
        var subscriptionStatus = $('#status');
        var plans = getActivePlans();
        var user = getLogInUser(userId, accessToken, function (user) {
            if (user == null)
                alert("user undefined");
            else {
                nameInput.val(user.name);
                emailInput.val(user.email);
                reknownInput.val(user.reknown);
                bioInput.val(user.bio);
                profilePic.attr('src', user.profilePictureImage);

                if (user.stripeToken == null) {
                    subscriptionStatus.append("Free");
                }

            }
        });
        $('#btnSaveChanges').click(function () {
            let user = {
                Id: userId,
                Name: nameInput.val(),
                Email: emailInput.val(),
                Reknown: reknownInput.val(),
                Bio: bioInput.val()
            }
            editUser(userId, user, function (responseData, textStatus, jqXHR) {
                if (textStatus == "success") {
                    swal({
                        title: 'Success',
                        text: responseData.message,
                        timer: 1500,
                        type: 'success'
                    }).then(
                        function () {
                            window.location.href = "/Account/Edit?id=" + userId;
                        },
                        // handling the promise rejection
                        function (dismiss) {
                            if (dismiss === 'timer') {
                                window.location.href = "/Account/Edit?id=" + userId;
                        }
                    });
                }
                else {
                    swal({
                        title: 'Error',
                        text: "Failed to edit user!",
                        timer: 1500,
                        type: 'error'
                    }).then(
                        function () {
                            window.location.href = "/Account/Edit?id=" + userId;
                        },
                        // handling the promise rejection
                        function (dismiss) {
                            if (dismiss === 'timer') {
                                window.location.href = "/Account/Edit?id=" + userId;
                            }
                        });
                }
            });
        });
    });
    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#ProfilePic').attr('src', e.target.result);
            }

            reader.readAsDataURL(input.files[0]);
        }
    }
    var result = "";
    function getBase64(file) {
        var reader = new FileReader();
        reader.readAsDataURL(file);
        reader.onload = function () {
            result = reader.result.split(',').pop();
            postPicture(result);

        };
        reader.onerror = function (error) {
            console.log('Error: ', error);
            imageError();
        };
    }

    $('#upgrade').click(function () {
        swal({
            html:
            '<form action="/charge" method="post" id="payment-form">' +
            '<div class="form-row" >' +
            '<label for="card-element">Credit or debit card</label>' +
            '<div id="card-element"></div><br/>' +
            '<div id="card-errors" role="alert"></div>' +
            '</div ><br/><button class="btn btn-primary">Upgrade</button></form >',
            showCloseButton: false,
            showCancelButton: false,
            showConfirmButton: false
        });
        var elements = stripe.elements();
        // Custom styling can be passed to options when creating an Element.
        // (Note that this demo uses a wider set of styles than the guide below.)
        var style = {
            base: {
                color: '#32325d',
                lineHeight: '24px',
                fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
                fontSmoothing: 'antialiased',
                fontSize: '16px',
                '::placeholder': {
                    color: '#aab7c4'
                }
            },
            invalid: {
                color: '#fa755a',
                iconColor: '#fa755a'
            }
        };

        // Create an instance of the card Element
        var card = elements.create('card', { style: style });

        // Add an instance of the card Element into the `card-element` <div>
        card.mount('#card-element');

        // Handle real-time validation errors from the card Element.
        card.addEventListener('change', function (event) {
            var displayError = document.getElementById('card-errors');
            if (event.error) {
                displayError.textContent = event.error.message;
            } else {
                displayError.textContent = '';
            }
        });

        // Handle form submission
        var form = document.getElementById('payment-form');
        form.addEventListener('submit', function (event) {
            event.preventDefault();
            
            stripe.createToken(card).then(function (result) {
                if (result.error) {
                    // Inform the user if there was an error
                    var errorElement = document.getElementById('card-errors');
                    errorElement.textContent = result.error.message;
                } else {
                    // Send the token to your server
                    stripeTokenHandler(result.token);
                }
            });
        });

    });

    function imageError() {
        $('#loading').css("visibility", "visible");
        $('#loading').attr('src', "/images/error.jpg");
    }

    $("#myInput").change(function () {
        if (this.files.length > 0) {
            readURL(this);
            $('#loading').css("visibility", "visible");
            //imageError();

            getBase64(this.files[0]);
        }
    });

    function postPicture(base64String) {

        $.ajax({
            // Post username, password & the grant type to /token
            url: properties.hostConnectionString + '/Account/UploadProfilePicAsync',
            method: 'POST',
            contentType: "application/x-www-form-urlencoded; charset=utf-8",
            crossDomain: true,
            headers: {
                'Authorization': 'Bearer '
                + accessToken
            },
            data: {
                ImageBase64: base64String,
                Id: userId
            },
            success: function (response) {
                console.dir(response)
                if (response != null) {
                    $('#ProfilePic').attr('src', response);
                    $('#loading').css("visibility", "hidden");
                }
            },
            error: function (jqXHR) {
                imageError();
            }
        });
    }

    function getActivePlans() {

        $.ajax({
            // Post username, password & the grant type to /token
            url: properties.hostConnectionString + '/Account/GetAllActiveSubscription',
            method: 'get',
            contentType: "application/x-www-form-urlencoded; charset=utf-8",
            crossDomain: true,
            headers: {
                'Authorization': 'Bearer '
                + accessToken
            },
            success: function (response) {
                console.dir(response)
                return response;
            },
            error: function (jqXHR) {
                return null;
            }
        });
    }


</script>